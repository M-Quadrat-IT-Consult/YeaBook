name: Build and Publish Docker Image

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  IMAGE_NAME: yeabook

jobs:
  docker:
    name: Build and push multi-arch image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME || '' }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN || '' }}
      DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Log in to Docker Hub
        if: ${{ env.DOCKERHUB_USERNAME && env.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Prepare Docker Hub image name
        id: prepare
        env:
          DOCKERHUB_REPOSITORY: ${{ env.DOCKERHUB_REPOSITORY }}
          DOCKERHUB_USERNAME: ${{ env.DOCKERHUB_USERNAME }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          image=""
          if [ -n "$DOCKERHUB_REPOSITORY" ]; then
            image="$DOCKERHUB_REPOSITORY"
          elif [ -n "$DOCKERHUB_USERNAME" ]; then
            image="$DOCKERHUB_USERNAME/$IMAGE_NAME"
          fi
          echo "docker_image=$image" >>"$GITHUB_OUTPUT"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ steps.prepare.outputs.docker_image }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
